{"version":3,"sources":["webpack:///./src/templates/posts.module.scss","webpack:///./src/templates/posts.js"],"names":["module","exports","postsQuery","AllPosts","data","pageContext","edges","allMdx","currentPage","numPages","className","styles","container","posts","title","map","post","node","key","id","to","fields","slug","frontmatter","date","excerpt","pagination","rel","current"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,UAAY,iCAAiC,WAAa,oC,kCCD5E,oIAgEaC,EAAU,WAyBRC,UA7EE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAEZC,EACRF,EADFG,OAAUD,MAGJE,EAA0BH,EAA1BG,YAAaC,EAAaJ,EAAbI,SAErB,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAOE,OACrB,yCACA,kBAAC,IAAD,CAAKC,MAAM,cACX,4BACGR,EAAMS,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACT,wBAAIC,IAAKF,EAAKG,IACZ,4BACE,kBAAC,OAAD,CAAMC,GAAIJ,EAAKK,OAAOC,MAAON,EAAKO,YAAYT,QAEhD,8BAAOE,EAAKO,YAAYC,MACxB,2BAAIR,EAAKS,eAKjB,yBAAKf,UAAWC,IAAOe,YAErB,8BACmB,IAAhBlB,GACC,kBAAC,OAAD,CACEY,GAAE,WAAYZ,EAAc,GAAM,EAAI,IAAMA,EAAc,GAC1DmB,IAAI,QAFN,kBAQJ,0BAAMjB,UAAWC,IAAOiB,SAAUpB,GAElC,8BACGA,IAAgBC,GACf,kBAAC,OAAD,CAAMW,GAAE,WAAYZ,EAAc,GAAKmB,IAAI,QAA3C","file":"component---src-templates-posts-js-d70b2f87b195af4e2874.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"posts-module--container--3zTLj\",\"pagination\":\"posts-module--pagination--1PxMb\"};","/**\n * Component to list all posts\n * Based on https://www.gatsbyjs.org/docs/adding-pagination/\n */\n\nimport React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport MainLayout from '../components/layout/main';\nimport SEO from '../components/seo';\nimport styles from './posts.module.scss';\n\nconst AllPosts = ({ data, pageContext }) => {\n  const {\n    allMdx: { edges },\n  } = data;\n\n  const { currentPage, numPages } = pageContext;\n\n  return (\n    <MainLayout>\n      <div className={styles.container}>\n        <div className={styles.posts}>\n          <h1>All Posts</h1>\n          <SEO title=\"All Posts\" />\n          <ul>\n            {edges.map(({ node: post }) => (\n              <li key={post.id}>\n                <h3>\n                  <Link to={post.fields.slug}>{post.frontmatter.title}</Link>\n                </h3>\n                <span>{post.frontmatter.date}</span>\n                <p>{post.excerpt}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className={styles.pagination}>\n          {/* Display for all pages but the first */}\n          <span>\n            {currentPage !== 1 && (\n              <Link\n                to={`/posts/${currentPage - 1 === 1 ? '/' : currentPage - 1}`}\n                rel=\"prev\"\n              >\n                Previous Page\n              </Link>\n            )}\n          </span>\n          <span className={styles.current}>{currentPage}</span>\n          {/* Display for all pages but the last */}\n          <span>\n            {currentPage !== numPages && (\n              <Link to={`/posts/${currentPage + 1}`} rel=\"next\">\n                Next Page\n              </Link>\n            )}\n          </span>\n        </div>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport const postsQuery = graphql`\n  query postsQuery($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/posts/\" } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default AllPosts;\n"],"sourceRoot":""}