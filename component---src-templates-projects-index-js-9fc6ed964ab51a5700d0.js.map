{"version":3,"sources":["webpack:///./src/templates/projects/projects.module.scss","webpack:///./src/templates/projects/index.js"],"names":["module","exports","projectsQuery","AllProjects","data","pageContext","edges","allMdx","currentPage","numPages","className","styles","container","projects","title","map","project","node","key","id","to","fields","slug","frontmatter","date","excerpt","pagination","text","numbers","Array","from","length","_","i","pageNumber","active","rel"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,UAAY,oCAAoC,WAAa,qCAAqC,QAAU,kCAAkC,OAAS,iCAAiC,KAAO,iC,6LC2EpMC,EAAa,aAyBXC,UAzFK,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAEfC,EACRF,EADFG,OAAUD,MAGJE,EAA0BH,EAA1BG,YAAaC,EAAaJ,EAAbI,SAErB,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAOE,UACrB,4CACA,kBAAC,IAAD,CAAKC,MAAM,iBACX,4BACGR,EAAMS,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACT,wBAAIC,IAAKF,EAAQG,IACf,4BACE,kBAAC,OAAD,CAAMC,GAAIJ,EAAQK,OAAOC,MACtBN,EAAQO,YAAYT,QAGzB,8BAAOE,EAAQO,YAAYC,MAC3B,2BAAIR,EAAQS,eAKpB,yBAAKf,UAAWC,IAAOe,YACrB,0BAAMhB,UAAWC,IAAOgB,QACH,IAAhBnB,IACD,kBAAC,OAAD,CACEY,GAAE,cAAeZ,EAAc,GAAM,EAAI,GAAKA,EAAc,IAD9D,aAOJ,0BAAME,UAAWC,IAAOiB,SACrBC,MAAMC,KAAK,CAAEC,OAAQtB,IAAY,SAACuB,EAAGC,GACpC,IAAMC,EAAaD,EAAI,EACvB,OACE,0BAAMf,IAAKgB,EAAYxB,UAAWwB,IAAe1B,EAAcG,IAAOwB,OAAS,IAC7D,IAAfD,EACC,kBAAC,OAAD,CAAMd,GAAE,cAAR,KAEA,kBAAC,OAAD,CAAMA,GAAE,aAAec,GAAeA,QAMhD,0BAAMxB,UAAWC,IAAOgB,MACrBnB,IAAgBC,GACf,kBAAC,OAAD,CAAMW,GAAE,cAAeZ,EAAc,GAAK4B,IAAI,QAA9C","file":"component---src-templates-projects-index-js-9fc6ed964ab51a5700d0.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"projects-module--container--2nSDS\",\"pagination\":\"projects-module--pagination--jbf2x\",\"numbers\":\"projects-module--numbers--2py6q\",\"active\":\"projects-module--active--3ihL6\",\"text\":\"projects-module--text--26ACf\"};","/**\n * Component to list all projects\n * Based on https://www.gatsbyjs.org/docs/adding-pagination/\n */\n\nimport React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport MainLayout from '../../components/layout/main';\nimport SEO from '../../components/seo';\nimport styles from './projects.module.scss';\n\nconst AllProjects = ({ data, pageContext }) => {\n  const {\n    allMdx: { edges },\n  } = data;\n\n  const { currentPage, numPages } = pageContext;\n\n  return (\n    <MainLayout>\n      <div className={styles.container}>\n        <div className={styles.projects}>\n          <h1>All Projects</h1>\n          <SEO title=\"All Projects\" />\n          <ul>\n            {edges.map(({ node: project }) => (\n              <li key={project.id}>\n                <h3>\n                  <Link to={project.fields.slug}>\n                    {project.frontmatter.title}\n                  </Link>\n                </h3>\n                <span>{project.frontmatter.date}</span>\n                <p>{project.excerpt}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className={styles.pagination}>\n          <span className={styles.text}>\n            {!(currentPage === 1) && (\n              <Link\n                to={`/projects/${currentPage - 1 === 1 ? '' : currentPage - 1}`}\n              >\n                Previous\n              </Link>\n            )}\n          </span>\n          <span className={styles.numbers}>\n            {Array.from({ length: numPages }, (_, i) => {\n              const pageNumber = i + 1;\n              return (\n                <span key={pageNumber} className={pageNumber === currentPage ? styles.active : ''}>\n                  {pageNumber === 1 ? (\n                    <Link to={`/projects/`}>1</Link>\n                  ) : (\n                    <Link to={`/projects/${pageNumber}`}>{pageNumber}</Link>\n                  )}\n                </span>\n              );\n            })}\n          </span>\n          <span className={styles.text}>\n            {currentPage !== numPages && (\n              <Link to={`/projects/${currentPage + 1}`} rel=\"next\">\n                Next\n              </Link>\n            )}\n          </span>\n        </div>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport const projectsQuery = graphql`\n  query projectsQuery($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default AllProjects;\n"],"sourceRoot":""}