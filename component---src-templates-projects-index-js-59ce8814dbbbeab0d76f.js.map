{"version":3,"sources":["webpack://data-viz-portfolio/./src/templates/projects/projects.module.scss","webpack://data-viz-portfolio/./src/templates/projects/index.js"],"names":["arrow","data","pageContext","edges","allMdx","currentPage","numPages","className","Link","to","title","description","map","project","node","featuredImage","getImage","fields","key","id","slug","state","G","image","alt","frontmatter","date","Array","from","length","_","i","pageNumber","number","rel"],"mappings":"+NAOWA,EAAQ,gCC+HnB,EA/GiB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAEZC,EACRF,EADFG,OAAUD,MAGJE,EAA0BH,EAA1BG,YAAaC,EAAaJ,EAAbI,SAErB,OACE,gBAAC,IAAD,KACE,uBAAKC,UD/BY,qCCgCf,uBAAKA,UD/BQ,mCCgCX,uBAAKA,UD/BE,+BCgCL,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT,WAEF,sCACA,gBAAC,IAAD,CACEC,MAAK,kBAAoBL,EACzBM,YAAW,qCAAuCN,IAEpD,0BACGF,EAAMS,KAAI,YAAwB,IAAfC,EAAc,EAApBC,KACNC,GAAgBC,OAASH,EAAQI,OAAOF,eAE9C,OACE,sBAAIG,IAAKL,EAAQM,IACf,gBAAC,EAAAX,KAAD,CACEC,GAAE,YAAcI,EAAQI,OAAOG,KAC/BC,MAAO,CAAEhB,gBAET,2BACE,gBAAC,EAAAiB,EAAD,CAAaC,MAAOR,EAAeS,IAAI,KACvC,0BAAKX,EAAQY,YAAYf,OACzB,4BAAOG,EAAQY,YAAYC,cAQzC,uBAAKnB,UD3DW,sCC4Dd,wBAAMA,UAAWP,KACI,IAAhBK,IACD,gBAAC,EAAAG,KAAD,CACEC,GAAE,cAAeJ,EAAc,GAAM,EAAI,GAAKA,EAAc,IAD9D,MAOJ,4BACGsB,MAAMC,KAAK,CAAEC,OAAQvB,IAAY,SAACwB,EAAGC,GACpC,IAAMC,EAAaD,EAAI,EACvB,OACE,wBACEb,IAAKc,EACLzB,UAAc0B,mCACZD,IAAe3B,GD1Ed,oCC6Ea,IAAf2B,EACC,gBAAC,EAAAxB,KAAD,CAAMC,GAAE,cAAR,KAEA,gBAAC,EAAAD,KAAD,CAAMC,GAAE,aAAeuB,GAAeA,QAMhD,wBAAMzB,UAAWP,GACdK,IAAgBC,GACf,gBAAC,EAAAE,KAAD,CAAMC,GAAE,cAAeJ,EAAc,GAAK6B,IAAI,QAA9C","file":"component---src-templates-projects-index-js-59ce8814dbbbeab0d76f.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"projects-module--container--XNYUr\";\nexport var content = \"projects-module--content--1N38u\";\nexport var nav = \"projects-module--nav--1i_AK\";\nexport var pagination = \"projects-module--pagination--1t8EW\";\nexport var number = \"projects-module--number--3iCH1\";\nexport var current = \"projects-module--current--2Wc8T\";\nexport var arrow = \"projects-module--arrow--1Cdjy\";","/**\n * Projects\n * \n * Display a page of projects\n * Based on https://www.gatsbyjs.org/docs/adding-pagination/\n */\n\nimport React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport PageLayout from \"../../components/page-layout\";\nimport Seo from \"../../components/seo\";\nimport {\n  container,\n  content,\n  nav,\n  pagination,\n  arrow,\n  number,\n  current,\n} from \"./projects.module.scss\";\n\nconst Projects = ({ data, pageContext }) => {\n  const {\n    allMdx: { edges },\n  } = data;\n\n  const { currentPage, numPages } = pageContext;\n\n  return (\n    <PageLayout>\n      <div className={container}>\n        <div className={content}>\n          <div className={nav}>\n            <Link to=\"/\">&larr; Home</Link>\n          </div>\n          <h1>Projects</h1>\n          <Seo\n            title={`All Projects - ${currentPage}`}\n            description={`All data visualization projects - ${currentPage}`}\n          />\n          <ul>\n            {edges.map(({ node: project }) => {\n              const featuredImage = getImage(project.fields.featuredImage);\n\n              return (\n                <li key={project.id}>\n                  <Link\n                    to={`/projects${project.fields.slug}`}\n                    state={{ currentPage }}\n                  >\n                    <div>\n                      <GatsbyImage image={featuredImage} alt=\"\" />\n                      <h4>{project.frontmatter.title}</h4>\n                      <span>{project.frontmatter.date}</span>\n                    </div>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className={pagination}>\n          <span className={arrow}>\n            {!(currentPage === 1) && (\n              <Link\n                to={`/projects/${currentPage - 1 === 1 ? \"\" : currentPage - 1}`}\n              >\n                &larr;\n              </Link>\n            )}\n          </span>\n          <span>\n            {Array.from({ length: numPages }, (_, i) => {\n              const pageNumber = i + 1;\n              return (\n                <span\n                  key={pageNumber}\n                  className={`${number} ${\n                    pageNumber === currentPage && current\n                  }`}\n                >\n                  {pageNumber === 1 ? (\n                    <Link to={`/projects/`}>1</Link>\n                  ) : (\n                    <Link to={`/projects/${pageNumber}`}>{pageNumber}</Link>\n                  )}\n                </span>\n              );\n            })}\n          </span>\n          <span className={arrow}>\n            {currentPage !== numPages && (\n              <Link to={`/projects/${currentPage + 1}`} rel=\"next\">\n                &rarr;\n              </Link>\n            )}\n          </span>\n        </div>\n      </div>\n    </PageLayout>\n  );\n};\n\nexport const projectsQuery = graphql`\n  query projectsQuery($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/src/content/projects/\" } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(layout: CONSTRAINED)\n              }\n            }\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Projects;\n"],"sourceRoot":""}