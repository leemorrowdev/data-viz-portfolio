{"componentChunkName":"component---src-templates-mdx-index-js","path":"/posts/post-one/","result":{"data":{"mdx":{"id":"2d3d237c-8c15-5407-b97b-34eff2669381","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"The JavaScript Environment\",\n  \"date\": \"2020-08-10T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"The JavaScript Environment\"), mdx(\"h2\", null, \"Sections\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Overview\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"./javascript-engines.md\"\n  }), \"JavaScript Engines\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"./closures.md\"\n  }), \"Closures\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"./browser-engines.md\"\n  }), \"Browser Engines\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"./async-operations.md\"\n  }), \"Asynchronous Operations\"))), mdx(\"h2\", null, \"Overview\"), mdx(\"h2\", null, \"Engines\"), mdx(\"p\", null, \"JavaScript environments are made up of two main components:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a JavaScript engine\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a browser engine\")), mdx(\"h3\", null, \"JavaScript Engines\"), mdx(\"p\", null, \"JavaScript engines manage the execution of JavaScript code on the application\\u2019s main thread. All JavaScript engines implement the features required by the European Computer Manufacturers Association (ECMA) \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.ecma-international.org/publications/standards/Ecma-262.htm\"\n  }), \"ECMA-262 standards\"), \", or ECMAScript. These standards are written by the ECMA\\u2019s Technical Committee 39, or TC39. TC39 produces new standards annually in July. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" A scripting language is a programming language designed to work with a specific run-time environment. In this case, ECMAScript is the standard used for web scripting languages, and JavaScript is merely the most popular implementation of that standard. \"), mdx(\"h3\", null, \"Browser Engines\"), mdx(\"p\", null, \"Browser engines manage how JavaScript applications interact with the browser and provides applications with built in APIs. These APIs are known as Web APIs, and are standardized by the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://html.spec.whatwg.org/\"\n  }), \"HTML5 standards\"), \". \"), mdx(\"p\", null, \"Web APIs are the only implementation details standardized on browser engines. All other implementation details are either similar purely by convention, or unique to the platform. \"), mdx(\"h4\", null, \"Other Platform Engines\"), mdx(\"p\", null, \"JavaScript can run on a variety of platforms, for example NodeJS on servers or React Native on Android and iOS devices, but these notes are based specifically on browser engines because browsers are the most common and standardized platform.\"), mdx(\"p\", null, \"Other platform engines like NodeJS and React Native do not follow the conventions of browser engines and do not implement the HTML 5 Standardization\\u2019s Web APIs. In most cases they do implement common Web APIs, but there is no guarantee of any particular API being implemented. \"), mdx(\"h2\", null, \"Operation Types\"), mdx(\"p\", null, \"The purpose behind these these two different engines is to support the two types of operations that all JavaScript environments must support:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Synchronous operations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Asynchronous operations\")), mdx(\"h3\", null, \"Synchronous Operations\"), mdx(\"p\", null, \"Synchronous operations are run by the JavaScript engine on the single main thread of an application, on which only one task runs at a time.\"), mdx(\"p\", null, \"JavaScript applications follow a single threaded execution model to prevent \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"race conditions\"), \". \"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Race condition: when generating the correct output of an operation is dependent on the sequence of two or more other operations whose sequence cannot be guaranteed.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Examples:\"), \" main application logic and changes to the UI\"), mdx(\"h3\", null, \"Asynchronous Operations\"), mdx(\"p\", null, \"Asynchronous operations are not run by the JavaScript engine; they are run by the browser engine on a different thread from the JavaScript application. These operations are called by JavaScript functions, but their actual logic is built into web browsers. Because of this, they are known as Web APIs. \"), mdx(\"p\", null, \"Without asynchronous operations, long running tasks would have to run on the main thread in JavaScript. Because only one task can execute at a time on the main thread, this would block the UI from updating. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Examples:\"), \" timers and server operations\"));\n}\n;\nMDXContent.isMDXComponent = true;","fileAbsolutePath":"/home/lee/projects/gatsby/data-viz-portfolio/src/content/posts/post-one.mdx","frontmatter":{"title":"The JavaScript Environment","date":"August 10, 2020"}}},"pageContext":{"id":"2d3d237c-8c15-5407-b97b-34eff2669381"}}}