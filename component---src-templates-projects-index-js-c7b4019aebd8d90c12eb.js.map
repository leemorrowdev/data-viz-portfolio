{"version":3,"sources":["webpack:///./src/templates/projects/projects.module.scss","webpack:///./src/templates/projects/index.js"],"names":["module","exports","projectsQuery","AllProjects","data","pageContext","edges","allMdx","currentPage","numPages","state","className","styles","container","content","nav","to","title","map","project","node","key","id","fields","slug","image","fluid","featuredImage","childImageSharp","frontmatter","date","pagination","text","numbers","Array","from","length","_","i","pageNumber","active","rel"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,UAAY,oCAAoC,QAAU,kCAAkC,IAAM,8BAA8B,WAAa,qCAAqC,QAAU,kCAAkC,OAAS,iCAAiC,KAAO,iC,kNC6FpRC,EAAa,aA+BXC,UAhHK,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAEfC,EACRF,EADFG,OAAUD,MAGJE,EAA0BH,EAA1BG,YAAaC,EAAaJ,EAAbI,SAEjBC,EAAQ,CAAEF,eAEd,OACE,kBAAC,IAAD,KACE,yBAAKG,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAOE,SACrB,yBAAKH,UAAWC,IAAOG,KACrB,kBAAC,OAAD,CAAMC,GAAG,KAAT,WAEF,4CACA,kBAAC,IAAD,CAAKC,MAAM,iBACX,4BACGX,EAAMY,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACT,wBAAIC,IAAKF,EAAQG,IACf,kBAAC,OAAD,CACEN,GAAE,YAAcG,EAAQI,OAAOC,KAC/Bd,MAAOA,GAEP,6BACE,yBAAKC,UAAWC,IAAOa,OACrB,kBAAC,IAAD,CACEC,MACEP,EAAQI,OAAOI,cAAcC,gBAAgBF,SAInD,4BAAKP,EAAQU,YAAYZ,OACzB,8BAAOE,EAAQU,YAAYC,cAOvC,yBAAKnB,UAAWC,IAAOmB,YACrB,0BAAMpB,UAAWC,IAAOoB,QACH,IAAhBxB,IACD,kBAAC,OAAD,CACEQ,GAAE,cAAeR,EAAc,GAAM,EAAI,GAAKA,EAAc,IAD9D,aAOJ,0BAAMG,UAAWC,IAAOqB,SACrBC,MAAMC,KAAK,CAAEC,OAAQ3B,IAAY,SAAC4B,EAAGC,GACpC,IAAMC,EAAaD,EAAI,EACvB,OACE,0BACEjB,IAAKkB,EACL5B,UAAW4B,IAAe/B,EAAcI,IAAO4B,OAAS,IAExC,IAAfD,EACC,kBAAC,OAAD,CAAMvB,GAAE,cAAR,KAEA,kBAAC,OAAD,CAAMA,GAAE,aAAeuB,GAAeA,QAMhD,0BAAM5B,UAAWC,IAAOoB,MACrBxB,IAAgBC,GACf,kBAAC,OAAD,CAAMO,GAAE,cAAeR,EAAc,GAAKiC,IAAI,QAA9C","file":"component---src-templates-projects-index-js-c7b4019aebd8d90c12eb.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"projects-module--container--2nSDS\",\"content\":\"projects-module--content--1DKR-\",\"nav\":\"projects-module--nav--3MSET\",\"pagination\":\"projects-module--pagination--jbf2x\",\"numbers\":\"projects-module--numbers--2py6q\",\"active\":\"projects-module--active--3ihL6\",\"text\":\"projects-module--text--26ACf\"};","/**\n * Component to list all projects\n * Based on https://www.gatsbyjs.org/docs/adding-pagination/\n */\n\nimport React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport MainLayout from \"../../components/layout/main\"\nimport SEO from \"../../components/seo\"\nimport styles from \"./projects.module.scss\"\n\nconst AllProjects = ({ data, pageContext }) => {\n  const {\n    allMdx: { edges },\n  } = data\n\n  const { currentPage, numPages } = pageContext\n\n  let state = { currentPage }\n\n  return (\n    <MainLayout>\n      <div className={styles.container}>\n        <div className={styles.content}>\n          <div className={styles.nav}>\n            <Link to=\"/\">&larr; Home</Link>\n          </div>\n          <h1>All Projects</h1>\n          <SEO title=\"All Projects\" />\n          <ul>\n            {edges.map(({ node: project }) => (\n              <li key={project.id}>\n                <Link\n                  to={`/projects${project.fields.slug}`}\n                  state={state}\n                >\n                  <div>\n                    <div className={styles.image}>\n                      <Img\n                        fluid={\n                          project.fields.featuredImage.childImageSharp.fluid\n                        }\n                      />\n                    </div>\n                    <h4>{project.frontmatter.title}</h4>\n                    <span>{project.frontmatter.date}</span>\n                  </div>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className={styles.pagination}>\n          <span className={styles.text}>\n            {!(currentPage === 1) && (\n              <Link\n                to={`/projects/${currentPage - 1 === 1 ? \"\" : currentPage - 1}`}\n              >\n                Previous\n              </Link>\n            )}\n          </span>\n          <span className={styles.numbers}>\n            {Array.from({ length: numPages }, (_, i) => {\n              const pageNumber = i + 1\n              return (\n                <span\n                  key={pageNumber}\n                  className={pageNumber === currentPage ? styles.active : \"\"}\n                >\n                  {pageNumber === 1 ? (\n                    <Link to={`/projects/`}>1</Link>\n                  ) : (\n                    <Link to={`/projects/${pageNumber}`}>{pageNumber}</Link>\n                  )}\n                </span>\n              )\n            })}\n          </span>\n          <span className={styles.text}>\n            {currentPage !== numPages && (\n              <Link to={`/projects/${currentPage + 1}`} rel=\"next\">\n                Next\n              </Link>\n            )}\n          </span>\n        </div>\n      </div>\n    </MainLayout>\n  )\n}\n\nexport const projectsQuery = graphql`\n  query projectsQuery($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            featuredImage {\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default AllProjects\n"],"sourceRoot":""}