{"version":3,"sources":["webpack://data-viz-portfolio/./src/templates/posts/posts.module.scss","webpack://data-viz-portfolio/./src/templates/posts/index.js"],"names":["arrow","data","pageContext","edges","allMdx","currentPage","numPages","className","Link","to","title","description","map","post","node","key","id","fields","slug","state","frontmatter","date","excerpt","Array","from","length","_","i","pageNumber","number","rel"],"mappings":"sNAOWA,EAAQ,6BCsHnB,EAvGc,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAETC,EACRF,EADFG,OAAUD,MAGJE,EAA0BH,EAA1BG,YAAaC,EAAaJ,EAAbI,SAErB,OACE,gBAAC,IAAD,KACE,uBAAKC,UD9BY,kCC+Bf,uBAAKA,UD9BQ,gCC+BX,uBAAKA,UD9BE,4BC+BL,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT,WAEF,mCACA,gBAAC,IAAD,CACEC,MAAK,eAAiBL,EACtBM,YAAW,0CAA4CN,IAEzD,0BACGF,EAAMS,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACT,sBAAIC,IAAKF,EAAKG,IACZ,gBAAC,EAAAR,KAAD,CAAMC,GAAE,SAAWI,EAAKI,OAAOC,KAAQC,MAAO,CAAEd,gBAC9C,2BACE,0BAAKQ,EAAKO,YAAYV,OACtB,4BAAOG,EAAKO,YAAYC,MACxB,yBAAIR,EAAKS,iBAOrB,uBAAKf,UDnDW,mCCoDd,wBAAMA,UAAWP,KACI,IAAhBK,IACD,gBAAC,EAAAG,KAAD,CACEC,GAAE,WAAYJ,EAAc,GAAM,EAAI,GAAKA,EAAc,IAD3D,MAOJ,4BACGkB,MAAMC,KAAK,CAAEC,OAAQnB,IAAY,SAACoB,EAAGC,GACpC,IAAMC,EAAaD,EAAI,EACvB,OACE,wBACEZ,IAAKa,EACLrB,UAAcsB,gCACZD,IAAevB,GDlEd,iCCqEa,IAAfuB,EACC,gBAAC,EAAApB,KAAD,CAAMC,GAAE,WAAR,KAEA,gBAAC,EAAAD,KAAD,CAAMC,GAAE,UAAYmB,GAAeA,QAM7C,wBAAMrB,UAAWP,GACdK,IAAgBC,GACf,gBAAC,EAAAE,KAAD,CAAMC,GAAE,WAAYJ,EAAc,GAAKyB,IAAI,QAA3C","file":"component---src-templates-posts-index-js-ca04caad6a85c384d795.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"posts-module--container--3j0kR\";\nexport var content = \"posts-module--content--3ceVL\";\nexport var nav = \"posts-module--nav--1-d9C\";\nexport var pagination = \"posts-module--pagination--24Wt6\";\nexport var number = \"posts-module--number--16ObO\";\nexport var current = \"posts-module--current--2m-pl\";\nexport var arrow = \"posts-module--arrow--1mMQw\";","/**\n * Posts\n * \n * Display a page of posts\n * Based on https://www.gatsbyjs.org/docs/adding-pagination/\n */\n\nimport React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport PageLayout from \"../../components/page-layout\";\nimport Seo from \"../../components/seo\";\nimport {\n  container,\n  content,\n  nav,\n  pagination,\n  arrow,\n  number,\n  current,\n} from \"./posts.module.scss\";\n\nconst Posts = ({ data, pageContext }) => {\n  const {\n    allMdx: { edges },\n  } = data;\n\n  const { currentPage, numPages } = pageContext;\n\n  return (\n    <PageLayout>\n      <div className={container}>\n        <div className={content}>\n          <div className={nav}>\n            <Link to=\"/\">&larr; Home</Link>\n          </div>\n          <h1>Posts</h1>\n          <Seo\n            title={`All Posts - ${currentPage}`}\n            description={`All front end development blog posts - ${currentPage}`}\n          />\n          <ul>\n            {edges.map(({ node: post }) => (\n              <li key={post.id}>\n                <Link to={`/posts${post.fields.slug}`} state={{ currentPage }}>\n                  <div>\n                    <h3>{post.frontmatter.title}</h3>\n                    <span>{post.frontmatter.date}</span>\n                    <p>{post.excerpt}</p>\n                  </div>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className={pagination}>\n          <span className={arrow}>\n            {!(currentPage === 1) && (\n              <Link\n                to={`/posts/${currentPage - 1 === 1 ? \"\" : currentPage - 1}`}\n              >\n                &larr;\n              </Link>\n            )}\n          </span>\n          <span>\n            {Array.from({ length: numPages }, (_, i) => {\n              const pageNumber = i + 1;\n              return (\n                <span\n                  key={pageNumber}\n                  className={`${number} ${\n                    pageNumber === currentPage && current\n                  }`}\n                >\n                  {pageNumber === 1 ? (\n                    <Link to={`/posts/`}>1</Link>\n                  ) : (\n                    <Link to={`/posts/${pageNumber}`}>{pageNumber}</Link>\n                  )}\n                </span>\n              );\n            })}\n          </span>\n          <span className={arrow}>\n            {currentPage !== numPages && (\n              <Link to={`/posts/${currentPage + 1}`} rel=\"next\">\n                &rarr;\n              </Link>\n            )}\n          </span>\n        </div>\n      </div>\n    </PageLayout>\n  );\n};\n\nexport const postsQuery = graphql`\n  query postsQuery($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/src/content/posts/\" } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Posts;\n"],"sourceRoot":""}