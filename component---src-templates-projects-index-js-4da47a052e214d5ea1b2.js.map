{"version":3,"sources":["webpack:///./src/templates/projects/projects.module.scss","webpack:///./src/templates/projects/index.js"],"names":["module","exports","Projects","data","pageContext","edges","allMdx","currentPage","numPages","className","styles","container","content","nav","to","title","description","map","project","node","key","id","fields","slug","state","image","fluid","featuredImage","childImageSharp","alt","frontmatter","date","pagination","arrow","Array","from","length","_","i","pageNumber","number","current","rel"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,UAAY,oCAAoC,QAAU,kCAAkC,IAAM,8BAA8B,WAAa,qCAAqC,OAAS,iCAAiC,QAAU,kCAAkC,MAAQ,kC,kCCDlS,8GAiIeC,UApHE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAEZC,EACRF,EADFG,OAAUD,MAGJE,EAA0BH,EAA1BG,YAAaC,EAAaJ,EAAbI,SAErB,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAOE,SACrB,yBAAKH,UAAWC,IAAOG,KACrB,kBAAC,OAAD,CAAMC,GAAG,KAAT,WAEF,wCACA,kBAAC,IAAD,CACEC,MAAK,kBAAoBR,EACzBS,YAAW,qCAAuCT,IAEpD,4BACGF,EAAMY,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACT,wBAAIC,IAAKF,EAAQG,IACf,kBAAC,OAAD,CACEP,GAAE,YAAcI,EAAQI,OAAOC,KAC/BC,MAAO,CAAEjB,gBAET,6BACE,yBAAKE,UAAWC,IAAOe,OACrB,kBAAC,IAAD,CACEC,MACER,EAAQI,OAAOK,cAAcC,gBAAgBF,MAE/CG,IAAI,MAGR,4BAAKX,EAAQY,YAAYf,OACzB,8BAAOG,EAAQY,YAAYC,cAOvC,yBAAKtB,UAAWC,IAAOsB,YACrB,0BAAMvB,UAAWC,IAAOuB,SACH,IAAhB1B,IACD,kBAAC,OAAD,CACEO,GAAE,cAAeP,EAAc,GAAM,EAAI,GAAKA,EAAc,IAD9D,MAOJ,8BACG2B,MAAMC,KAAK,CAAEC,OAAQ5B,IAAY,SAAC6B,EAAGC,GACpC,IAAMC,EAAaD,EAAI,EACvB,OACE,0BACElB,IAAKmB,EACL9B,UAAcC,IAAO8B,OAAZ,KACPD,IAAehC,GAAeG,IAAO+B,UAGvB,IAAfF,EACC,kBAAC,OAAD,CAAMzB,GAAE,cAAR,KAEA,kBAAC,OAAD,CAAMA,GAAE,aAAeyB,GAAeA,QAMhD,0BAAM9B,UAAWC,IAAOuB,OACrB1B,IAAgBC,GACf,kBAAC,OAAD,CAAMM,GAAE,cAAeP,EAAc,GAAKmC,IAAI,QAA9C","file":"component---src-templates-projects-index-js-4da47a052e214d5ea1b2.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"projects-module--container--2nSDS\",\"content\":\"projects-module--content--1DKR-\",\"nav\":\"projects-module--nav--3MSET\",\"pagination\":\"projects-module--pagination--jbf2x\",\"number\":\"projects-module--number--2Imui\",\"current\":\"projects-module--current--3SPJ0\",\"arrow\":\"projects-module--arrow--l8jDO\"};","/**\n * Component to list all projects\n * Based on https://www.gatsbyjs.org/docs/adding-pagination/\n */\n\nimport React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport PageLayout from \"../../components/page-layout\"\nimport SEO from \"../../components/seo\"\nimport styles from \"./projects.module.scss\"\n\nconst Projects = ({ data, pageContext }) => {\n  const {\n    allMdx: { edges },\n  } = data\n\n  const { currentPage, numPages } = pageContext\n\n  return (\n    <PageLayout>\n      <div className={styles.container}>\n        <div className={styles.content}>\n          <div className={styles.nav}>\n            <Link to=\"/\">&larr; Home</Link>\n          </div>\n          <h1>Projects</h1>\n          <SEO\n            title={`All Projects - ${currentPage}`}\n            description={`All data visualization projects - ${currentPage}`}\n          />\n          <ul>\n            {edges.map(({ node: project }) => (\n              <li key={project.id}>\n                <Link\n                  to={`/projects${project.fields.slug}`}\n                  state={{ currentPage }}\n                >\n                  <div>\n                    <div className={styles.image}>\n                      <Img\n                        fluid={\n                          project.fields.featuredImage.childImageSharp.fluid\n                        }\n                        alt=\"\"\n                      />\n                    </div>\n                    <h4>{project.frontmatter.title}</h4>\n                    <span>{project.frontmatter.date}</span>\n                  </div>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className={styles.pagination}>\n          <span className={styles.arrow}>\n            {!(currentPage === 1) && (\n              <Link\n                to={`/projects/${currentPage - 1 === 1 ? \"\" : currentPage - 1}`}\n              >\n                &larr;\n              </Link>\n            )}\n          </span>\n          <span>\n            {Array.from({ length: numPages }, (_, i) => {\n              const pageNumber = i + 1\n              return (\n                <span\n                  key={pageNumber}\n                  className={`${styles.number} ${\n                    pageNumber === currentPage && styles.current\n                  }`}\n                >\n                  {pageNumber === 1 ? (\n                    <Link to={`/projects/`}>1</Link>\n                  ) : (\n                    <Link to={`/projects/${pageNumber}`}>{pageNumber}</Link>\n                  )}\n                </span>\n              )\n            })}\n          </span>\n          <span className={styles.arrow}>\n            {currentPage !== numPages && (\n              <Link to={`/projects/${currentPage + 1}`} rel=\"next\">\n                &rarr;\n              </Link>\n            )}\n          </span>\n        </div>\n      </div>\n    </PageLayout>\n  )\n}\n\nexport const projectsQuery = graphql`\n  query projectsQuery($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/src/content/projects/\" } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            featuredImage {\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Projects\n"],"sourceRoot":""}