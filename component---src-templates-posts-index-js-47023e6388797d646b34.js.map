{"version":3,"sources":["webpack:///./src/templates/posts/posts.module.scss","webpack:///./src/templates/posts/index.js"],"names":["module","exports","postsQuery","AllPosts","data","pageContext","edges","allMdx","currentPage","numPages","className","styles","container","posts","title","map","post","node","key","id","to","fields","slug","frontmatter","date","excerpt","pagination","text","numbers","Array","from","length","_","i","pageNumber","active","rel"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,UAAY,iCAAiC,WAAa,kCAAkC,QAAU,+BAA+B,OAAS,8BAA8B,KAAO,8B,0LC4ExLC,EAAU,aA4BRC,UA7FE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAEZC,EACRF,EADFG,OAAUD,MAGJE,EAA0BH,EAA1BG,YAAaC,EAAaJ,EAAbI,SAErB,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAOE,OACrB,yCACA,kBAAC,IAAD,CAAKC,MAAM,cACX,4BACGR,EAAMS,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACT,wBAAIC,IAAKF,EAAKG,IACZ,4BACE,kBAAC,OAAD,CAAMC,GAAIJ,EAAKK,OAAOC,MAAON,EAAKO,YAAYT,QAEhD,8BAAOE,EAAKO,YAAYC,MACxB,2BAAIR,EAAKS,eAKjB,yBAAKf,UAAWC,IAAOe,YACrB,0BAAMhB,UAAWC,IAAOgB,QACH,IAAhBnB,IACD,kBAAC,OAAD,CACEY,GAAE,WAAYZ,EAAc,GAAM,EAAI,GAAKA,EAAc,IAD3D,aAOJ,0BAAME,UAAWC,IAAOiB,SACrBC,MAAMC,KAAK,CAAEC,OAAQtB,IAAY,SAACuB,EAAGC,GACpC,IAAMC,EAAaD,EAAI,EACvB,OACE,0BACEf,IAAKgB,EACLxB,UAAWwB,IAAe1B,EAAcG,IAAOwB,OAAS,IAExC,IAAfD,EACC,kBAAC,OAAD,CAAMd,GAAE,WAAR,KAEA,kBAAC,OAAD,CAAMA,GAAE,UAAYc,GAAeA,QAM7C,0BAAMxB,UAAWC,IAAOgB,MACrBnB,IAAgBC,GACf,kBAAC,OAAD,CAAMW,GAAE,WAAYZ,EAAc,GAAK4B,IAAI,QAA3C","file":"component---src-templates-posts-index-js-47023e6388797d646b34.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"posts-module--container--eoiWG\",\"pagination\":\"posts-module--pagination--3X3_w\",\"numbers\":\"posts-module--numbers--3xm6A\",\"active\":\"posts-module--active--Fx1bH\",\"text\":\"posts-module--text--3KSF0\"};","/**\n * Component to list all posts\n * Based on https://www.gatsbyjs.org/docs/adding-pagination/\n */\n\nimport React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport MainLayout from \"../../components/layout/main\"\nimport SEO from \"../../components/seo\"\nimport styles from \"./posts.module.scss\"\n\nconst AllPosts = ({ data, pageContext }) => {\n  const {\n    allMdx: { edges },\n  } = data\n\n  const { currentPage, numPages } = pageContext\n\n  return (\n    <MainLayout>\n      <div className={styles.container}>\n        <div className={styles.posts}>\n          <h1>All Posts</h1>\n          <SEO title=\"All Posts\" />\n          <ul>\n            {edges.map(({ node: post }) => (\n              <li key={post.id}>\n                <h3>\n                  <Link to={post.fields.slug}>{post.frontmatter.title}</Link>\n                </h3>\n                <span>{post.frontmatter.date}</span>\n                <p>{post.excerpt}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className={styles.pagination}>\n          <span className={styles.text}>\n            {!(currentPage === 1) && (\n              <Link\n                to={`/posts/${currentPage - 1 === 1 ? \"\" : currentPage - 1}`}\n              >\n                Previous\n              </Link>\n            )}\n          </span>\n          <span className={styles.numbers}>\n            {Array.from({ length: numPages }, (_, i) => {\n              const pageNumber = i + 1\n              return (\n                <span\n                  key={pageNumber}\n                  className={pageNumber === currentPage ? styles.active : \"\"}\n                >\n                  {pageNumber === 1 ? (\n                    <Link to={`/posts/`}>1</Link>\n                  ) : (\n                    <Link to={`/posts/${pageNumber}`}>{pageNumber}</Link>\n                  )}\n                </span>\n              )\n            })}\n          </span>\n          <span className={styles.text}>\n            {currentPage !== numPages && (\n              <Link to={`/posts/${currentPage + 1}`} rel=\"next\">\n                Next\n              </Link>\n            )}\n          </span>\n        </div>\n      </div>\n    </MainLayout>\n  )\n}\n\nexport const postsQuery = graphql`\n  query postsQuery($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/posts/\" } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default AllPosts\n"],"sourceRoot":""}